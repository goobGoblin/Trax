-- Users Table
CREATE TABLE Users (
	UserID INT PRIMARY KEY,
	Username VARCHAR(255) UNIQUE NOT NULL,
	Email VARCHAR(255) NOT NULL,
	Password VARCHAR(255) NOT NULL, -- Store hashed passwords
	ProfileInfo JSON, -- Includes name, bio, profile picture, etc.
	CreatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
	UpdatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

-- Artists Table
CREATE TABLE Artists (
	ArtistID INT PRIMARY KEY,
	Name VARCHAR(255),
	Biography TEXT,
	CreatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
	UpdatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

-- Genres Table
CREATE TABLE Genres (
	GenreID INT PRIMARY KEY,
	Name VARCHAR(255),
	Description TEXT,
	CreatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
	UpdatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

-- Labels Table
CREATE TABLE Labels (
	LabelID INT PRIMARY KEY,
	Name VARCHAR(255),
	Description TEXT,
	CreatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
	UpdatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

-- Albums Table
CREATE TABLE Albums (
	AlbumID INT PRIMARY KEY,
	Title VARCHAR(255),
	ReleaseDate DATE,
	ArtistID INT,
	GenreID INT,
	LabelID INT,
	CreatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
	UpdatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	FOREIGN KEY (ArtistID) REFERENCES Artists(ArtistID),
	FOREIGN KEY (GenreID) REFERENCES Genres(GenreID),
	FOREIGN KEY (LabelID) REFERENCES Labels(LabelID)
);

-- Tracks Table
CREATE TABLE Tracks (
	TrackID INT PRIMARY KEY,
	Title VARCHAR(255),
	Duration INT,
	AlbumID INT,
	ArtistID INT,
	CreatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
	UpdatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	FOREIGN KEY (AlbumID) REFERENCES Albums(AlbumID),
	FOREIGN KEY (ArtistID) REFERENCES Artists(ArtistID)
);

-- DJ Mixes Table
CREATE TABLE DJMixes (
	MixID INT PRIMARY KEY,
	Title VARCHAR(255),
	ReleaseDate DATE,
	ArtistID INT,
	GenreID INT,
	LabelID INT,
	CreatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
	UpdatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	FOREIGN KEY (ArtistID) REFERENCES Artists(ArtistID),
	FOREIGN KEY (GenreID) REFERENCES Genres(GenreID),
	FOREIGN KEY (LabelID) REFERENCES Labels(LabelID)
);

-- Follow Relationships Table
CREATE TABLE Follows (
	FollowID INT PRIMARY KEY,
	FollowerID INT,
	FollowedID INT,
	FollowType ENUM('user', 'artist', 'label', 'genre'),
	CreatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
	FOREIGN KEY (FollowerID) REFERENCES Users(UserID),
	FOREIGN KEY (FollowedID) REFERENCES Users(UserID) -- Adjust according to follow type
);